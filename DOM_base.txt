Базовая работа с DOM-деревом:
Что нужно знать для выполнения:
- document.querySelector
- element.onClick
- element.style
- element.style.backgroundColor
- element.innerText
- element.value
- element.onkeypress

1. На странице отобразить блок произвольного размера и кнопку. При нажатии на кнопку блок окрашивается в другой цвет.

2. На странице отобразить заголовок h1 с произвольным текстом и кнопку. При нажатии на кнопку текст в заголовке меняется на другой.

3. На странице отобразить поле для ввода (input), кнопку и блок для вывода текста. При нажатии на кнопку текст внутри блока вывода заменяется на значение из поля ввода.

4. На странице отобразить поле для ввода (input) и блок для вывода текста. При вводе очередного символа в поле ввода текст внутри блока вывода заменяется на значение из поля ввода.

Что нужно знать для выполнения:
- event object
- event.clientx
- event.offsetx
- event.altKey

5. На странице отобразить блок и заголовок h2. При клике на блок содержимое заголовка меняется на значение координаты x клика относительно блока.

6. На странице отобразить блок и заголовок h2. При клике на блок содержимое заголовка меняется на значение координаты y клика относительно страницы.

7. На странице отобразить блок и заголовок h2. При клике на блок содержимое заголовка меняется на значение координаты y клика относительно страницы, но только при условии, что в момент клика была зажата клавиша Alt. Если нет, то менять содержимое h2 на "Alt не нажат"

Что нужно знать для выполнения:
- element.addEventListener
- второй параметр element.addEventListener (опции)
- события mouseover и mouseout
- element.style.backgroundColor
- event.stopPropagation

8. На странице отобразить блок и заголовок h2. При наведении курсора мыши на блок текст заголовка устанавливать в "Героям слава!", цвет текста должен быть желтым, а фон - синим. При смещении курсора с блока И ИЗНАЧАЛЬНО текст заголовка устанавливать в "Слава Украине!", цвет текста должен быть синим, а фон - желтым.

9. Сделать то же самое, что в задании 9, но цвет текста должен менять один обработчик, а цвет фона - другой.

10. На странице отобразить блок размером 200х200 пикселей, в который вложен блок размером 100х100 пикселей, внутренний блок отцентрировать по горизонтали и вертикали относительно внешнего, блоки покрасить разными цветами (дальше - вложенные блоки). При нажатии на внутренний блок выводить в консоль сначала текст "inner", который должен выводить обработчик, привязанный к внутреннему блоку, потом выводить в консоль "outer", который должен выводить обработчик, привязанный к внешнему блоку.

11. Сделать то же самое, что и в задании 11, но сначала должно выводится "outer", потом "inner". Использовать перехват события на фазе погружения, поменять выводимый обработчиками текст нельзя.

12. На странице отобразить вложенные блоки. Сделать так, чтобы при клике на внутренний в консоль выводился текст "inner", создаваемый обработчиком, привязанным к внутреннему блоку. При клике на внешний выводится текст "outer", привязанный к внешнему блоку. При этом, при нажатии на внутренний блок "outer" не выводится. Реализоать при помощи stopPropagation

Что нужно знать для выполнения:
- event.preventDefault
- event.buttons

13. На странице отобразить блок и заголовок h2. При нажатии на нём левой кнопкой мыши текст заголовка установить в "Нажата левая", при нажатии правой - в "Нажата правая". Контекстное меню при этом не должно вызываться.

Что нужно знать для выполнения:
- element.classlist

14. На странице отобразить блок произвольного размера и кнопку. При нажатии на кнопку блок окрашивается в другой цвет. На этот раз не работаем со стилем блока напрямую, а добавляем блоку класс, который заранее описан в CSS с нужными стилями. Для добавления класса используем classlist

15. На странице отобразить блок произвольного размера и кнопку. При клике на кнопку блок окрашивается в другой цвет: при первом клике в красный, при втором - в желтый, при третем - в зелёный, при четвёртом - в красный и т.д. На этот раз не работаем со стилем блока напрямую, а добавляем блоку класс, который заранее описан в CSS с нужными стилями. Для добавления класса используем classlist.

16. На странице отобразить блок одного цвета. При клике на блок он меняет цвет на другой. При втором клике - на первоначальный и т.д. Использовать classlist.toggle


Что нужно знать для выполнения:
- event.target
- делегирование обработки событий

17. На странице отобразить вложенные блоки. Сделать так, чтобы при клике на внутренний в консоль выводился текст "inner", создаваемый обработчиком, привязанным к внутреннему блоку. При клике на внешний выводится текст "outer", привязанный к внешнему блоку. При этом, при нажатии на внутренний блок "outer" не выводится. На этот раз использовать target, можно использовать любой признак, для определения поведения (повесить отдельные классы или атрибуты, и.т.п.).

18. На странице отобразить блок, в который вложено несколько других блоков, причём дочерние расположены таким образом, что полностью не покрывают родительский. Дочерние и родительский выделить отдельным цветом. В каждом дочернем блоке должен быть уникальный текст: 1, 2, 3 ... Кроме этого на странице реализовать блок для вывода текста. На родительский блок повесить обработчик, который при клике на дочерний элемент будет выводить в блок вывода текста значение уникального текста из дочернего элемента. При клике же на родительский блок в блок вывода должно выводится сообщение: "Ошибка, выберите опцию".

19. На странице отобразить блок, разделённый на 100 блоков вертикальными и горизонтальными линиями (таблица 10х10). При клике на любую "ячейку" она окрашивается в желтый цвет. При повторном клике цвет пропадает. Обработчик для этого должен быть один (на родительском блоке).


20.(Сложная) На странице отобразить ссылку, в которой указать путь для перехода на "http://www.google.com". При нажатии на ссылку должно появиться диалоговое окно с текстом "Вы действительно хотите перейти на сторонний сайт?" и двумя кнопками "Да" и "Нет". Окно должно быть на весь экран, отображаться поверх содержимого сайта иметь черный чвет с прозрачностью 60%. В центре него должен быть непрозрачный блок, на котором отображаются текст и кнопки. При нажатии на кнопку "Да" происходит переход по указаному адресу. При нажатии на кнопку "Нет" диалоговое окно закрывается и никакого перехода не происходит.
